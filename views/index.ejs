
<section id="hero" class="d-flex align-items-center">

  <div class="container-fluid" data-aos="fade-up">
    <div class="row justify-content-center">
      <% if (locals.loginUser) { %>
        <div class="col-xl-6 col-lg-7 pt-3 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center">
          <h1 class="animate-text">¡Bienvenid@ de nuevo, <span class="username-color"><%= loginUser.username %></span>!</h1>
          <h2 class="animate-text">¿Quieres ver las nuevas propuestas disponibles?</h2>
          <div><a href="/posts" class="btn-get-started scrollto">Ver Propuestas</a></div>
        </div>
      <% } else { %>
        <div class="col-xl-6 col-lg-7 pt-3 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center">
          <h1 class="animate-text">Revolucionando<br>la Gobernanza<br>en Servicios<br>de Interpretación</h1>
          <h2 class="animate-text">Optimiza la toma de decisiones y mejora la calidad de tus eventos multilingües.</h2>
          <div><a href="/login" class="btn-get-started scrollto">Iniciar Sesión</a></div>
        </div>
      <% } %>
      <div class="col-xl-4 col-lg-5 order-1 order-lg-2 hero-img" data-aos="zoom-in" data-aos-delay="150">
        <img src="/images/3D-icons/tierra-icon-1.png" class="img-fluid animated" alt="">
      </div>
    </div> 
  </div>
</section>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const texts = document.querySelectorAll('.animate-text');
    texts.forEach((text) => {
      animateText(text);
    });
  });
  
  function animateText(element) {
    const textNodes = Array.from(element.childNodes).map(node => {
      if (node.nodeType === Node.TEXT_NODE) {
        return node.textContent.split('').map(char => {
          const span = document.createElement('span');
          span.textContent = char;
          return span;
        });
      } else {
        return [node];
      }
    }).flat();
    
    element.innerHTML = '';
    element.style.visibility = 'visible';
  
    const cursorSpan = document.createElement('span');
    cursorSpan.classList.add('cursor');
    element.appendChild(cursorSpan);
  
    let i = 0;
  
    const typing = setInterval(() => {
      if (i < textNodes.length) {
        cursorSpan.before(textNodes[i]);
        i++;
      } else {
        clearInterval(typing);
        element.removeChild(cursorSpan); // Opcional: remover el cursor al final
      }
    }, 50); // Ajusta la velocidad de escritura aquí
  }
  </script>
  